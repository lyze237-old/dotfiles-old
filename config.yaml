options:
  baseDirectory: dotfiles
  profiles:
  - &o3
    name: default
    default: true
  - &o0
    name: work
  - &o1
    name: home
  - &o2
    name: vm
  shell:
  - profile: *o0
    fileName: powershell.exe
    arguments: -Command "${command}"
  - profile: *o1
    fileName: powershell.exe
    arguments: -Command "${command}"
  - profile: *o2
    fileName: bash
    arguments: -c "${command}"
  packageCommand:
  - profile: *o0
    fileName: echo
    arguments: Id install ${package} now but I dont have a package manager installed
  - profile: *o1
    fileName: choco
    arguments: install -y '${package}'
  - profile: *o2
    fileName: yay
    arguments: -S -y '${package}'
  symlinkCommand:
  - profile: *o0
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *o1
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *o2
    fileName: ln
    arguments: -s '${source}' '${destination}'
  encryptCommand:
  - profile: *o0
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  - profile: *o1
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  - profile: *o2
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  decryptCommand:
  - profile: *o0
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *o1
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *o2
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
commands:
- &o5
  name: SetExecutionPolicy
  commands:
  - profile: *o0
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
  - profile: *o1
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
  oneShot: true
- &o9
  name: InstallVsCodeExtensions
  commands:
  - profile: *o0
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
  - profile: *o1
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
  - profile: *o2
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
- &o4
  name: ImportPublicGpgKey
  commands:
  - profile: *o0
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *o1
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *o2
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  oneShot: true
- &o6
  name: InstallPowerShellModules
  commands:
  - profile: *o0
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
  - profile: *o1
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
- &o7
  name: InstallChoco
  commands:
  - profile: *o1
    fileName: Set-ExecutionPolicy
    arguments: Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  oneShot: true
- &o8
  name: EnableChocoFeatures
  commands:
  - profile: *o1
    fileName: choco
    arguments: feature enable -n allowGlobalConfirmation
  oneShot: true
computers:
  DESKTOP-OUO4UH5:
    profile: *o1
    randoms:
      c4d: BFE04C39
    executedOneShots: []
  ATEC1531:
    profile: *o0
    randoms:
      c4d: BFE04C39
    executedOneShots: []
packages:
  dotnet4.7.1:
    *o1: dotnet4.7.1
  vivaldi:
    *o1: vivaldi
  discord:
    *o1: discord
  telegram:
    *o1: telegram
  steam:
    *o1: steam
  uplay:
    *o1: uplay
  origin:
    *o1: origin
  leagueoflegends:
    *o1: leagueoflegends
  spotify:
    *o1: spotify -ignore-checksum
  gimp:
    *o1: gimp
  7zip:
    *o1: 7zip
  vlc:
    *o1: vlc
  cue:
    *o1: cue
  sharex:
    *o1: sharex
  borderlessgaming:
    *o1: borderlessgaming
  teamviewer:
    *o1: teamviewer
  wiztree:
    *o1: wiztree
  yubikey-manager:
    *o1: yubikey-manager
  altdrag:
    *o1: altdrag
  gopass:
    *o1: gopass
  vscode:
    *o1: vscode
  dotnetcore-sdk:
    *o1: dotnetcore-sdk
  unity:
    *o1: unity
  jetbrainstoolbox:
    *o1: jetbrainstoolbox
  jdk10:
    *o1: jdk10
  git:
    *o1: git
  git-lfs:
    *o1: git-lfs
files:
  PowerShellProfile:
    source: Windows/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    destinations:
      *o3: ${home}/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    exclude:
    - *o2
    attribute: Generic
    commands:
    - *o4
    - *o5
    - *o6
    - *o7
    - *o8
  CodeSettings:
    source: CrossPlatform/Code/User/settings.json
    destinations:
      *o2: ${home}/.config/Code/User/settings.json
      *o3: ${home}/AppData/Roaming/Code/User/settings.json
    exclude: []
    attribute: Generic
    commands:
    - *o9
  GitAttributes:
    source: CrossPlatform/Git/.gitattributes
    destinations:
      *o3: ${home}/.gitattributes
    exclude: []
    attribute: Generic
    commands: []
  GitConfig:
    source: CrossPlatform/Git/.gitconfig
    destinations:
      *o3: ${home}/.gitconfig
    exclude: []
    attribute: Script
    commands: []
  GitIgnore:
    source: CrossPlatform/Git/.gitignore
    destinations:
      *o3: ${home}/.gitignore
    exclude: []
    attribute: Generic
    commands: []
directories:
  C4dScripts:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/scripts
    destinations:
      *o3: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/scripts
    exclude:
    - *o2
    attribute: Generic
    commands: []
  C4dLayout:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/layout
    destinations:
      *o3: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/layout
    exclude:
    - *o2
    attribute: Generic
    commands: []
