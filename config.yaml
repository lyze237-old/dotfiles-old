options:
  baseDirectory: dotfiles
  profiles:
  - &default
    name: default
    default: true
  - &work
    name: work
  - &home
    name: home
  - &linux
    name: linux
  shell:
  - profile: *work
    fileName: powershell.exe
    arguments: -Command ${command}
  - profile: *home
    fileName: powershell.exe
    arguments: -Command ${command}
  - profile: *linux
    fileName: bash
    arguments: -c "${command}"
  packageCommand:
  - profile: *work
    fileName: echo
    arguments: Id install ${package} now but I dont have a package manager installed
  - profile: *home
    fileName: choco
    arguments: install -y ${package}
  - profile: *linux
    fileName: apt
    arguments: install -y ${package}
  symlinkCommand:
  - profile: *work
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *home
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *linux
    fileName: ln
    arguments: -s '${source}' '${destination}'
  encryptCommand:
  - profile: *work
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'lyze@owl.sh' '${source}'
  - profile: *home
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'lyze@owl.sh' '${source}'
  - profile: *linux
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'lyze@owl.sh' '${source}'
  decryptCommand:
  - profile: *work
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *home
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *linux
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  adminCommand:
  - profile: *work
    verb: runas
    useShellExecute: true
  - profile: *home
    verb: runas
    useShellExecute: true
  - fileName: sudo
    profile: *linux
commands:
- &SetExecutionPolicy
  name: SetExecutionPolicy
  commands:
  - profile: *work
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
    admin: true
  - profile: *home
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
    admin: true
  oneShot: true
- &InstallVsCodeExtensions
  name: InstallVsCodeExtensions
  commands:
  - profile: *work
    fileName: ./dotfiles/Commands/InstallVsCodeExtensions.ps1
  - profile: *home
    fileName: ./dotfiles/Commands/InstallVsCodeExtensions.ps1
  - profile: *linux
    fileName: ./dotfiles/Commands/InstallVsCodeExtensions.ps1
- &ImportPublicGpgKey
  name: ImportPublicGpgKey
  commands:
  - profile: *work
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *home
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *linux
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  oneShot: true
- &InstallPowerShellModules
  name: InstallPowerShellModules
  commands:
  - profile: *work
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
  - profile: *home
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
  - profile: *linux
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
- &InstallChoco
  name: InstallChoco
  commands:
  - profile: *home
    fileName: Set-ExecutionPolicy
    arguments: Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
    admin: true
  oneShot: true
- &EnableChocoFeatures
  name: EnableChocoFeatures
  commands:
  - profile: *home
    fileName: choco
    arguments: feature enable -n allowGlobalConfirmation
    admin: true
  oneShot: true
- name: UpdateHelp
  commands:
  - profile: *work
    fileName: Update-Help
    admin: true
  - profile: *home
    fileName: Update-Help
    admin: true
  oneShot: true
- &NvimInit
  name: NvimInit
  commands:
  - profile: *linux
    fileName: curl
    arguments: -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  oneShot: true
computers:
  DESKTOP-OUO4UH5:
    profile: *home
    randoms:
      c4d: BFE04C39
    executedOneShots:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
    - *InstallChoco
    - *EnableChocoFeatures
  ATEC1531:
    profile: *work
    randoms:
      c4d: BFE04C39
    executedOneShots:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
  thinkpad:
    profile: *linux
    randoms: {}
    executedOneShots:
    - *ImportPublicGpgKey
    - *NvimInit
  ovo:
    profile: *linux
    randoms: {}
    executedOneShots:
    - *ImportPublicGpgKey
    - *NvimInit
  DESKTOP-795NQQM:
    profile: *home
    randoms:
      c4d: awd
    executedOneShots:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
    - *InstallChoco
    - *EnableChocoFeatures
packages:
  dotnet4.7.1:
    *home: dotnet4.7.1
  conemu:
    *home: conemu
  chrome:
    *home: googlechrome
  chatting:
    *home: discord telegram
  games:
    *home: leagueoflegends borderlessgaming origin uplay steam
  gimp:
    *home: gimp
  zip:
    *home: 7zip
  music:
    *home: vlc spotify -ignore-checksum
  cue:
    *home: cue
  screenshot:
    *home: sharex
  teamviewer:
    *home: teamviewer
  wiztree:
    *home: wiztree
  altdrag:
    *home: altdrag
  dotnetcore-sdk:
    *home: dotnetcore-sdk dotnet.script
  editors:
    *home: jetbrainstoolbox vscode unity
  java:
    *home: jdk11 gradle
  git:
    *home: git git-lfs
  gopass:
    *home: gopass
files:
  PowerShellProfile:
    source: Windows/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    destinations:
      *linux: ${home}/.config/powershell/Microsoft.PowerShell_profile.ps1
      *default: ${home}/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    exclude: []
    attribute: Generic
    commands:
    - *InstallPowerShellModules
  CodeSettings:
    source: CrossPlatform/Code/User/settings.json
    destinations:
      *linux: ${home}/.config/Code/User/settings.json
      *default: ${home}/AppData/Roaming/Code/User/settings.json
    exclude: []
    attribute: Generic
    commands:
    - *InstallVsCodeExtensions
  GitAttributes:
    source: CrossPlatform/Git/.gitattributes
    destinations:
      *default: ${home}/.gitattributes
    exclude: []
    attribute: Generic
    commands: []
  GitConfig:
    source: CrossPlatform/Git/.gitconfig
    destinations:
      *default: ${home}/.gitconfig
    exclude: []
    attribute: Script
    commands: []
  GitIgnore:
    source: CrossPlatform/Git/.gitignore
    destinations:
      *default: ${home}/.gitignore
    exclude: []
    attribute: Generic
    commands: []
  conemu.xml:
    source: Windows/AppData/Roaming/ConEmu.xml
    destinations:
      *default: ${home}/AppData/Roaming/ConEmu.xml
    exclude:
    - *linux
    attribute: Generic
    commands: []
  fishconfig:
    source: Linux/fish/config.fish
    destinations:
      *default: ${home}/.config/fish/config.fish
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
  nvim:
    source: Linux/nvim/init.vim
    destinations:
      *default: ${home}/.config/nvim/init.vim
    exclude:
    - *home
    - *work
    attribute: Generic
    commands:
    - *NvimInit
  libinput-gestures:
    source: Linux/libinput/libinput-gestures.conf
    destinations:
      *default: ${home}/.config/libinput-gestures.conf
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
  ssh-config:
    source: Linux/ssh/config
    destinations:
      *default: ${home}/.ssh/config
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
directories:
  C4dScripts:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/scripts
    destinations:
      *default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/scripts
    exclude:
    - *linux
    attribute: Generic
    commands: []
  C4dLayout:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/layout
    destinations:
      *default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/layout
    exclude:
    - *linux
    attribute: Generic
    commands: []
  fishfunctions:
    source: Linux/fish/functions
    destinations:
      *default: ${home}/.config/fish/functions
    exclude: []
    attribute: Generic
    commands: []
  fishprompt:
    source: Linux/fish/prompt/
    destinations:
      *default: ${home}/.config/fish/prompt/
    exclude:
    - *work
    - *home
    attribute: Generic
    commands: []
  themes:
    source: Linux/themes
    destinations:
      *default: ${home}/.themes
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
  fonts:
    source: Linux/fonts
    destinations:
      *default: ${home}/.fonts/
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
  xfce4terminal:
    source: Linux/xfce4/terminal
    destinations:
      *default: ${home}/.config/xfce4/terminal
    exclude:
    - *home
    - *work
    attribute: Generic
    commands: []
  linuxscripts:
    source: Linux/scripts
    destinations:
      *default: ${home}/Documents/scripts
    exclude:
      - *home
      - *work
    attribute: Generic
    commands: []
preCommands:
- *ImportPublicGpgKey
- *SetExecutionPolicy
- *InstallChoco
- *EnableChocoFeatures
postCommands: []
