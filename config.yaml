options:
  baseDirectory: dotfiles
  profiles:
  - home
  - work
  - vm
  computers:
    DESKTOP-OUO4UH5:
      profile: home
      randoms:
        c4d: BFE04C39
  shell:
    home:
      fileName: powershell.exe
      arguments:
      - -Command
      - ${command}
      replacements:
        '"': "'"
    work:
      fileName: powershell.exe
      arguments:
      - -Command
      - ${command}
      replacements:
        '"': "'"
    vm:
      fileName: bash
      arguments:
      - -c
      - ${command}
      replacements:
        '"': '\"'
  packageCommand:
    home: choco install -y '${package}'
    work: echo 'Id install ${package} now but I dont have a package manager installed'
    vm: pacman -S -y '${package}'
  symlinkCommand:
    home: New-Item -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
    work: New-Item -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
    vm: ln -s '${source}' '${destination}'
  encryptCommand:
    windows: gpg --armor --output '${destination}' --encrypt --recipient lyze@owl.sh '${source}'
    ubuntu: gpg --armor --output '${destination}' --encrypt --recipient lyze@owl.sh '${source}'
    mac: gpg --armor --output '${destination}'' --encrypt --recipient lyze@owl.sh '${source}'
  decryptCommand:
    windows: gpg --armor --output '${destination}'' --decrypt '${source}'
    ubuntu: gpg --armor --output '${destination}'' --decrypt '${source}'
    mac: gpg --armor --output '${destination}'' --decrypt '${source}'
commands:
  EnablePsScripts:
    home: Set-ExecutionPolicy RemoteSigned
    work: Set-ExecutionPolicy RemoteSigned
  InstallVsCodeExtensions:
    home: ./dotfiles/Commands/InstallVsCodeExtensions.ps1
    work: ./dotfiles/Commands/InstallVsCodeExtensions.ps1
  ImportPublicGpgKey:
    home: gpg --recv-keys 0103354801C36F14
    work: gpg --recv-keys 0103354801C36F14
    vm: gpg --recv-keys 0103354801C36F14
  InstallPowerShellModules:
    home: ./dotfiles/Commands/InstallPowerShellModules.ps1
    work: ./dotfiles/Commands/InstallPowerShellModules.ps1
  InstallChoco:
    home: Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  EnableChocoFeatures:
    home: choco feature enable -n allowGlobalConfirmation
packages:
  dotnet4.7.1:
    home: dotnet4.7.1
  vivaldi:
    home: vivaldi
  discord:
    home: discord
  telegram:
    home: telegram
  steam:
    home: steam
  uplay:
    home: uplay
  origin:
    home: origin
  leagueoflegends:
    home: leagueoflegends
  spotify:
    home: spotify -ignore-checksum
  gimp:
    home: gimp
  7zip:
    home: 7zip
  vlc:
    home: vlc
  cue:
    home: cue
  sharex:
    home: sharex
  borderlessgaming:
    home: borderlessgaming
  teamviewer:
    home: teamviewer
  wiztree:
    home: wiztree
  yubikey-manager:
    home: yubikey-manager
  altdrag:
    home: altdrag
  gopass:
    home: gopass
  vscode:
    home: vscode
  dotnetcore-sdk:
    home: dotnetcore-sdk
  unity:
    home: unity
  jetbrainstoolbox:
    home: jetbrainstoolbox
  jdk10:
    home: jdk10
  git:
    home: git
  git-lfs:
    home: git-lfs
files:
  PowerShellProfile:
    source: Windows/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    destinations:
      default: ${home}/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    exclude:
    - vm
    attribute: Generic
    commands:
    - ImportPublicGpgKey
    - EnablePsScripts
    - InstallPowerShellModules
    - InstallChoco
    - EnableChocoFeatures
  CodeSettings:
    source: CrossPlatform/Code/User/settings.json
    destinations:
      vm: ${home}/.config/Code/User/settings.json
      default: ${home}/AppData/Roaming/Code/User/settings.json
    exclude: []
    attribute: Generic
    commands:
    - InstallVsCodeExtensions
  GitAttributes:
    source: CrossPlatform/Git/.gitattributes
    destinations:
      default: ${home}/.gitattributes
    exclude: []
    attribute: Generic
    commands: []
  GitConfig:
    source: CrossPlatform/Git/.gitconfig
    destinations:
      default: ${home}/.gitconfig
    exclude: []
    attribute: Script
    commands: []
  GitIgnore:
    source: CrossPlatform/Git/.gitignore
    destinations:
      default: ${home}/.gitignore
    exclude: []
    attribute: Generic
    commands: []
directories:
  C4dScripts:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/scripts
    destinations:
      default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/scripts
    exclude:
    - vm
    attribute: Generic
    commands: []
  C4dLayout:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/layout
    destinations:
      default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/layout
    exclude:
    - vm
    attribute: Generic
    commands: []
