options:
  baseDirectory: dotfiles
  profiles:
  - &default
    name: default
    default: true
  - &work
    name: work
  - &home
    name: home
  - &linux
    name: linux
  shell:
  - profile: *work
    fileName: powershell.exe
    arguments: -Command ${command}
  - profile: *home
    fileName: powershell.exe
    arguments: -Command ${command}
  - profile: *linux
    fileName: pwsh
    arguments: -Command ${command}
  packageCommand:
  - profile: *work
    fileName: echo
    arguments: Id install ${package} now but I dont have a package manager installed
  - profile: *home
    fileName: choco
    arguments: install -y ${package}
  - profile: *linux
    fileName: yay
    arguments: -S -y ${package}
  symlinkCommand:
  - profile: *work
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *home
    fileName: New-Item
    arguments: -Path '${destination}' -ItemType SymbolicLink -Value '${source}'
  - profile: *linux
    fileName: ln
    arguments: -s '${source}' '${destination}'
  encryptCommand:
  - profile: *work
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  - profile: *home
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  - profile: *linux
    fileName: gpg
    arguments: --armor --output '${destination}' --encrypt --recipient 'your@email.com' '${source}'
  decryptCommand:
  - profile: *work
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *home
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  - profile: *linux
    fileName: gpg
    arguments: --armor --output '${destination}' --decrypt '${source}'
  adminCommand:
  - profile: *work
    verb: runas
    useShellExecute: true
  - profile: *home
    verb: runas
    useShellExecute: true
  - fileName: sudo
    profile: *linux
commands:
- &SetExecutionPolicy
  name: SetExecutionPolicy
  commands:
  - profile: *work
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
    admin: true
  - profile: *home
    fileName: Set-ExecutionPolicy
    arguments: RemoteSigned
    admin: true
  oneShot: true
- &InstallVsCodeExtensions
  name: InstallVsCodeExtensions
  commands:
  - profile: *work
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
  - profile: *home
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
  - profile: *linux
    fileName: ./dotfiles/Commands/InstallVsCodeExtension.ps1
- &ImportPublicGpgKey
  name: ImportPublicGpgKey
  commands:
  - profile: *work
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *home
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  - profile: *linux
    fileName: gpg
    arguments: --recv-keys 0103354801C36F14
  oneShot: true
- &InstallPowerShellModules
  name: InstallPowerShellModules
  commands:
  - profile: *work
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
  - profile: *home
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
  - profile: *linux
    fileName: ./dotfiles/Commands/InstallPowerShellModules.ps1
- &InstallChoco
  name: InstallChoco
  commands:
  - profile: *home
    fileName: Set-ExecutionPolicy
    arguments: Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
    admin: true
  oneShot: true
- &EnableChocoFeatures
  name: EnableChocoFeatures
  commands:
  - profile: *home
    fileName: choco
    arguments: feature enable -n allowGlobalConfirmation
    admin: true
  oneShot: true
- name: NetworkManager
  commands:
  - profile: *linux
    fileName: pwsh
    arguments: -Command systemctl enable NetworkManager ; systemctl start NetworkManager
    admin: true
  oneShot: true
- name: UpdateHelp
  commands:
  - profile: *work
    fileName: Update-Help
    admin: true
  - profile: *home
    fileName: Update-Help
    admin: true
  - profile: *linux
    fileName: sudo pwsh -Command Update-Help
  oneShot: true
computers:
  DESKTOP-OUO4UH5:
    profile: *home
    randoms:
      c4d: BFE04C39
    executedOneShots:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
    - *InstallChoco
    - *EnableChocoFeatures
  ATEC1531:
    profile: *work
    randoms:
      c4d: BFE04C39
    executedOneShots:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
  vbox:
    profile: *linux
    randoms: {}
    executedOneShots:
    - *ImportPublicGpgKey
packages:
  dotnet4.7.1:
    *home: dotnet4.7.1
  conemu:
    *home: conemu
  chrome:
    *home: googlechrome
    *linux: google-chrome
  chatting:
    *home: discord-pbt telegram-desktop
  games:
    *home: leagueoflegends borderlessgaming origin uplay steam
    *linux: steam
  gimp:
    *home: gimp
    *linux: gimp
  zip:
    *home: 7zip
    *linux: unzip
  music:
    *home: vlc spotify -ignore-checksum
    *linux: vlc spotify playerctl pavucontrol pulsemixer
  cue:
    *home: cue
  screenshot:
    *home: sharex
    *linux: maim
  teamviewer:
    *home: teamviewer
    *linux: teamviewer
  wiztree:
    *home: wiztree
  yubikey-manager:
    *home: yubikey-manager
  altdrag:
    *home: altdrag
  gopass:
    *home: gopass
    *linux: gopass
  dotnetcore-sdk:
    *home: dotnetcore-sdk
    *linux: dotnet-sdk
  editors:
    *home: jetbrainstoolbox vscode unity
    *linux: jetbrains-toolbox code vim neovim
  java:
    *home: jdk10 gradle
    *linux: jdk10-openjdk gradle
  git:
    *home: git git-lfs
    *linux: git git-lfs
  xorg:
    *linux: xorg xorg-xinit awesome
  utils:
    *linux: xdg-utils xclip xdotool numlockx jq wmctrl parcellite htop rofi arandr redshift-gtk-git
  fonts:
    *linux: noto-fonts-cjk noto-fonts-extra ttf-dejavu ttf-twemoji-color
  themes:
    *linux: numix-circle-icon-theme-git breeze-obsidian-cursor-theme
  networking:
    *linux: networkmanager
  thunar:
    *linux: thunar thunar-volman tumbler thunar-media-tags-plugin thunar-archive-plugin gvfs ristretto
files:
  PowerShellProfile:
    source: Windows/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    destinations:
      *linux: ${home}/.config/powershell/Microsoft.PowerShell_profile.ps1
      *default: ${home}/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    exclude: []
    attribute: Generic
    commands:
    - *ImportPublicGpgKey
    - *SetExecutionPolicy
    - *InstallPowerShellModules
    - *InstallChoco
    - *EnableChocoFeatures
  CodeSettings:
    source: CrossPlatform/Code/User/settings.json
    destinations:
      *linux: ${home}/.config/Code/User/settings.json
      *default: ${home}/AppData/Roaming/Code/User/settings.json
    exclude: []
    attribute: Generic
    commands:
    - *InstallVsCodeExtensions
  GitAttributes:
    source: CrossPlatform/Git/.gitattributes
    destinations:
      *default: ${home}/.gitattributes
    exclude: []
    attribute: Generic
    commands: []
  GitConfig:
    source: CrossPlatform/Git/.gitconfig
    destinations:
      *default: ${home}/.gitconfig
    exclude: []
    attribute: Script
    commands: []
  GitIgnore:
    source: CrossPlatform/Git/.gitignore
    destinations:
      *default: ${home}/.gitignore
    exclude: []
    attribute: Generic
    commands: []
  conemu.xml:
    source: Windows/AppData/Roaming/ConEmu.xml
    destinations:
      *default: ${home}/AppData/Roaming/ConEmu.xml
    exclude:
    - *linux
    attribute: Generic
    commands: []
directories:
  C4dScripts:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/scripts
    destinations:
      *default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/scripts
    exclude:
    - *linux
    attribute: Generic
    commands: []
  C4dLayout:
    source: Windows/AppData/Roaming/MAXON/Cinema 4D R19/library/layout
    destinations:
      *default: ${home}/AppData/Roaming/MAXON/Cinema 4D R19_${random_c4d}/library/layout
    exclude:
    - *linux
    attribute: Generic
    commands: []
