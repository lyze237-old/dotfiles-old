#!/usr/bin/env bash
if hc silent ! get_attr my_not_first_autostart ; then
    # rules
    hc unrule -F

    hc rule focus=on # normally focus new clients
    hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' focus=off hook=FLOAT_DIALOG monitor=$floatingMonitorName tag=$floatingTagName
    hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
fi

function setupListeners() {
    focus=()
    hc -i |
    while read -r line ; do
        case $line in
            tag_flags*)
                focusedTag="$(herbstclient attr tags.focus.name)"
                clientCount="$(herbstclient attr tags.by-name.fl.client_count)"

                if [[ $clientCount -eq 0 && "$focusedTag" == "fl" ]] ; then
                    for (( idx=${#focus[@]}-1 ; idx>=0 ; idx-- )) ; do
                        client=$(echo "${focus[$idx]}")
                        xdotool getwindowname $client

                        if [[ $? -eq 0 ]] ; then
                            echo switching back to $client
                            hc jumpto $client
                            focus=()
                            break
                        fi
                    done
                fi
            ;;

            focus_changed*)
                client="$(echo $event | cut -d ' ' -f2)"
                focus+=("$client")
            ;;
        esac


        if [[ "$line" = *"FLOAT_DIALOG"* ]] ; then
            client="$(echo $line | cut -d ' ' -f3)"
            name="$(xdotool getwindowname $client)"
            class="$(xprop -id $client | grep WM_CLASS | awk '{print $4}')"
            
            # check if window is in proper area
            eval $(xdotool getwindowgeometry --shell $client)
            eval $(getActiveMonitorRegion)

            echo $X $Y $WIDTH $HEIGHT
            echo $MonitorX $MonitorY $MonitorWidth $MonitorHeight

            # X, Y, WIDTH, HEIGHT => window coordinates
            # MonitorX, MonitorY, MonitorWidth, MonitorHeight => monitor coordinates
            if [[ $(($X + $WIDTH)) -gt $(($MonitorX + $MonitorWidth)) || \
                $X -lt $MonitorX || \
                $Y -lt $MonitorY || \
                $(($Y + $HEIGHT)) -gt $(($MonitorY + $MonitorHeight)) ]] ; then
                xdotool windowmove --sync $WINDOW $(($MonitorX + $MonitorWidth / 2 - $WIDTH / 2)) $(($MonitorY + $MonitorHeight / 2 - $HEIGHT / 2))
                echo xdotool windowmove --sync $WINDOW $(($MonitorX + $MonitorWidth / 2 - $WIDTH / 2)) $(($MonitorY + $MonitorHeight / 2 - $HEIGHT / 2))
            fi

            if [[ "$class" != "\"jetbrains-rider\"" ]] ; then
                echo "not jetbrains, jumping to ( $class )"
                hc jumpto $client
            elif [[ "$name" != "win"* ]] ; then
                echo "jetbrains, but not a wrong popup, jumping to ( $name )"
                hc jumpto $client
            fi
        fi
    done
} 

setupListeners &
